@page "/usuarioform/{Id:int}"
@inject IUsuarioService UsuarioService
@inject NavigationManager Navigation

<h3 class="mb-4">@((usuarioEditando.Id == 0) ? "Nuevo Usuario" : "Editar Usuario")</h3>

<EditForm Model="usuarioEditando" OnValidSubmit="GuardarUsuarioAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Nombre</label>
        <InputText class="form-control" @bind-Value="usuarioEditando.Nombre" />
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText class="form-control" @bind-Value="usuarioEditando.Email" />
    </div>

    <div class="mb-3">
        <label class="form-label">Clave</label>
        <InputText type="password" class="form-control" @bind-Value="usuarioEditando.Clave" />
    </div>

    <div class="mb-3">
        <label class="form-label">Ruta Imagen</label>
        <InputText class="form-control" @bind-Value="usuarioEditando.Imagen" />
    </div>

    <button class="btn btn-primary me-2" type="submit">
        <i class="bi bi-save"></i> Guardar
    </button>
    <button class="btn btn-secondary" type="button" @onclick="Cancelar">
        Cancelar
    </button>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }
    private Usuario usuarioEditando = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            var todos = await UsuarioService.ObtenerTodosAsync();
            var usuario = todos.FirstOrDefault(u => u.Id == Id);
            if (usuario != null)
            {
                usuarioEditando = new Usuario
                {
                    Id = usuario.Id,
                    Nombre = usuario.Nombre,
                    Email = usuario.Email,
                    Clave = usuario.Clave,
                    Imagen = usuario.Imagen
                };
            }
        }
    }

    private async Task GuardarUsuarioAsync()
    {
        if (usuarioEditando.Id == 0)
            await UsuarioService.AgregarAsync(usuarioEditando);
        else
            await UsuarioService.ActualizarAsync(usuarioEditando);

        Navigation.NavigateTo("/usuarios");
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/usuarios");
    }
}
