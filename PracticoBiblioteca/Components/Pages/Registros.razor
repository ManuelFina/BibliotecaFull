@page "/register"
@inject IUsuarioService UsuarioService
@inject NavigationManager Navigation

<h3>Registro de Cliente</h3>

<EditForm Model="@registro" OnValidSubmit="OnRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <label class="form-label">Nombre:</label>
        <InputText @bind-Value="registro.Nombre" class="form-control" />
    </div>

    <div class="mb-2">
        <label class="form-label">Email:</label>
        <InputText @bind-Value="registro.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Contraseña:</label>
        <InputText @bind-Value="registro.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Registrarse</button>
</EditForm>

@if (!string.IsNullOrEmpty(mensaje))
{
    <p class="mt-2">@mensaje</p>
}

@code {
    private RegistroDTO registro = new RegistroDTO
    {
        Nombre = string.Empty,
        Email = string.Empty,
        Password = string.Empty
    };

    private string? mensaje;

    private async Task OnRegister()
    {
        try
        {
            var usuario = await UsuarioService.RegistrarAsync(registro);

            if (usuario != null)
            {
                mensaje = "Usuario registrado correctamente ✅";
                Navigation.NavigateTo("/");
            }
            else
            {
                mensaje = "Error en el registro ❌";
            }
        }
        catch (Exception ex)
        {
            mensaje = $"Ocurrió un error: {ex.Message}";
        }
    }
}
